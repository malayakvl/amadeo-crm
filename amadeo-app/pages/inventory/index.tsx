import Head from 'next/head';
import { getSession } from 'next-auth/client';
import React, { useState } from 'react';
import { useTranslations } from 'next-intl';
import { userSelector } from '../../redux/user/selectors';
import { useSelector } from 'react-redux';
import { AddProduct, ListProducts } from '../../components/inventory';

export default function Index({ session, locale }: { session: any; locale: string }) {
    if (!session) return <></>;
    const t = useTranslations();
    const user = useSelector(userSelector);
    const [activeTab, setActiveTab] = useState('products');

    const handleTabClick = (e: React.MouseEvent<HTMLElement>) => {
        const target = e.target as HTMLElement;
        setActiveTab(target.id);
    };

    return (
        <>
            <Head>
                <title>Amadeo CRM - Inventory</title>
                <meta name="description" content="Generated by create next app" />
            </Head>

            <div className="page-title">
                <h1>{t('Inventory')}</h1>
            </div>
            <div className="block-white-8 mr-10">
                <div className="block">
                    {user.role_id === 2 && (
                        <nav className="float-tabs">
                            <button
                                id="products"
                                onClick={handleTabClick}
                                className={`tabs ${activeTab === 'products' ? 'active' : ''}`}>
                                {t('Products')}
                            </button>
                            <button
                                id="add"
                                onClick={handleTabClick}
                                className={`tabs ${activeTab === 'add' ? 'active' : ''}`}>
                                {t('Add Product')}
                            </button>
                            <button
                                id="password"
                                onClick={handleTabClick}
                                className={`tabs ${activeTab === 'password' ? 'active' : ''}`}>
                                {t('Sync Products')}
                            </button>
                        </nav>
                    )}
                </div>
            </div>
            <div className="block-white-8 mr-10 mt-10">
                <div className="tabs-content">
                    <div className={`w-full ${activeTab !== 'products' ? 'hidden' : ''}`}>
                        <ListProducts locale={locale} />
                    </div>
                    <div className={`w-full ${activeTab !== 'add' ? 'hidden' : ''}`}>
                        <AddProduct locale={locale} productData={{}} />
                    </div>
                    <div className={`w-full ${activeTab !== 'password' ? 'hidden' : ''}`} />
                </div>
            </div>
        </>
    );
}

export async function getServerSideProps(context: any) {
    const { locale } = context;
    const session = await getSession(context);

    if (!session) {
        return {
            redirect: { destination: `/${locale === 'fr' ? '' : `${locale}/`}auth/signin` }
        };
    }

    return {
        props: {
            session,
            locale,
            messages: {
                ...require(`../../messages/${locale}.json`)
            }
        }
    };
}
