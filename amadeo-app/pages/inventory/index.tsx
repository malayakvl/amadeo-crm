import Head from 'next/head';
import { getSession } from 'next-auth/client';
import React, { useEffect } from 'react';
import { useTranslations } from 'next-intl';
import { userSelector } from '../../redux/user/selectors';
import { useDispatch, useSelector } from 'react-redux';
import {
    AddProduct,
    ListProducts,
    EditProduct,
    InventoryFilters,
    SyncProduct
} from '../../components/inventory';
import { activeTabSelector } from '../../redux/products/selectors';
import {
    fetchAdditionalAction,
    setActiveTabAction,
    importProductAction
} from '../../redux/products/actions';

export default function Index({ session, locale }: { session: any; locale: string }) {
    if (!session) return <></>;
    const t = useTranslations();
    const user = useSelector(userSelector);
    const dispatch = useDispatch();
    const activeTab = useSelector(activeTabSelector);
    const hiddenFileInput = React.useRef(null);

    useEffect(() => {
        dispatch(fetchAdditionalAction());
    }, []);

    const handleClick = () => {
        (hiddenFileInput as any).current.click();
    };

    const handleChange = (event: any) => {
        const fileUploaded = event.target.files[0];
        const formData = new FormData();
        if (fileUploaded) {
            formData.append('file', fileUploaded);
        }
        dispatch(importProductAction(formData));
    };

    return (
        <>
            <Head>
                <title>Amadeo CRM - Inventory</title>
                <meta name="description" content="Generated by create next app" />
            </Head>

            <div className="page-title">
                <h1>{t('Inventory')}</h1>
                <div className="float-right">
                    <button className="btn-export" onClick={handleClick}>
                        <span>Import products using CSV file</span>
                    </button>
                    <input
                        type="file"
                        onChange={handleChange}
                        ref={hiddenFileInput}
                        style={{ display: 'none' }}
                    />
                </div>
            </div>
            <div className="block-white-8 mr-10">
                <div className="block">
                    {user.role_id === 2 && (
                        <nav className="float-tabs">
                            <button
                                id="products"
                                onClick={() => {
                                    dispatch(setActiveTabAction('products'));
                                }}
                                className={`tabs ${activeTab === 'products' ? 'active' : ''}`}>
                                {t('Products')}
                            </button>
                            <button
                                id="add"
                                onClick={() => {
                                    dispatch(setActiveTabAction('add'));
                                }}
                                className={`tabs ${
                                    ['add', 'edit'].includes(activeTab) ? 'active' : ''
                                }`}>
                                {t(`${activeTab === 'edit' ? 'Edit' : 'Add'} Product`)}
                            </button>
                            <button
                                id="password"
                                onClick={() => {
                                    dispatch(setActiveTabAction('sync'));
                                }}
                                className={`tabs ${activeTab === 'sync' ? 'active' : ''}`}>
                                {t('Sync Products')}
                            </button>
                        </nav>
                    )}
                    {activeTab === 'products' && <InventoryFilters locale={locale} />}
                </div>
            </div>
            <div className="block-white-8 mr-10 mt-10">
                <div className="tabs-content">
                    <div className={`w-full ${activeTab !== 'products' ? 'hidden' : ''}`}>
                        <ListProducts locale={locale} />
                    </div>
                    <div
                        className={`w-full ${
                            !['add', 'edit'].includes(activeTab) ? 'hidden' : ''
                        }`}>
                        {activeTab === 'add' && <AddProduct locale={locale} />}
                        {activeTab === 'edit' && <EditProduct locale={locale} />}
                    </div>
                    <div className={`w-full ${activeTab !== 'sync' ? 'hidden' : ''}`}>
                        <SyncProduct />
                    </div>
                </div>
            </div>
        </>
    );
}

export async function getServerSideProps(context: any) {
    const { locale } = context;
    const session = await getSession(context);

    if (!session) {
        return {
            redirect: { destination: `/${locale === 'fr' ? '' : `${locale}/`}auth/signin` }
        };
    }

    return {
        props: {
            session,
            locale,
            messages: {
                ...require(`../../messages/${locale}.json`)
            }
        }
    };
}
