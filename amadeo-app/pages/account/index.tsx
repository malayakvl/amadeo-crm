import React from 'react';
import { getSession } from 'next-auth/client';
import { useTranslations } from 'next-intl';
import { getProfile } from '../../lib/profile';
import Head from 'next/head';
import { useState } from 'react';
import { Address, Profile, AddressesList, Password } from '../../components/account';
import { getCountries } from '../../lib/staff';

interface ProfileProps {
    user: any;
    addresses: any;
    countries: any;
}

function Account({
    session,
    infoData,
    locale
}: {
    session: any;
    infoData: ProfileProps;
    locale: string;
}) {
    const t = useTranslations();

    const [activeTab, setActiveTab] = useState('profile');
    const [subTitle, setSubTitle] = useState(t('Personal Information'));
    const [profileData] = useState(infoData.user);

    const handleTabClick = (e: React.MouseEvent<HTMLElement>) => {
        const target = e.target as HTMLElement;
        setActiveTab(target.id);
        switch (target.id) {
            case 'profile':
                setSubTitle(t('Personal Information'));
                break;
            case 'addressess':
                setSubTitle(t('Addresses'));
                break;
            case 'password':
                setSubTitle(t('Password'));
                break;
        }
    };

    return (
        <>
            <Head>
                <title>Amadeo CRM - Personal Information</title>
                <meta name="description" content="Generated by create next app" />
            </Head>

            <div className="page-title">
                <h1>
                    Profile <em /> <span>{subTitle}</span>
                </h1>
            </div>
            <div className="block-white-8 mr-10">
                <div className="block">
                    {profileData.role_id === 2 && (
                        <nav className="float-tabs">
                            <button
                                id="profile"
                                onClick={handleTabClick}
                                className={`tabs ${activeTab === 'profile' ? 'active' : ''}`}>
                                {t('Personal Information')}
                            </button>
                            <button
                                id="addressess"
                                onClick={handleTabClick}
                                className={`tabs ${activeTab === 'addressess' ? 'active' : ''}`}>
                                {t('Addressess')}
                            </button>
                            <button
                                id="password"
                                onClick={handleTabClick}
                                className={`tabs ${activeTab === 'password' ? 'active' : ''}`}>
                                {t('Password')}
                            </button>
                        </nav>
                    )}
                </div>
                <div className="tabs-content">
                    <div className={`w-full ${activeTab !== 'profile' ? 'hidden' : ''}`}>
                        <Profile />
                    </div>
                    <div className={`w-full ${activeTab !== 'addressess' ? 'hidden' : ''}`}>
                        <AddressesList email={session.user.email || ''} />
                        <Address
                            userAddress={{
                                country_id: '',
                                state: '',
                                post_code: '',
                                address_type: '',
                                city: '',
                                address_line_1: '',
                                address_line_2: ''
                            }}
                            countriesData={infoData.countries}
                            locale={locale}
                        />
                    </div>
                    <div className={`w-full ${activeTab !== 'password' ? 'hidden' : ''}`}>
                        <Password />
                    </div>
                </div>
            </div>
        </>
    );
}

export default Account;

export async function getServerSideProps(context: any) {
    const { req, locale } = context;
    const session = await getSession({ req });

    let infoData: ProfileProps;
    if (!session) {
        return {
            redirect: { destination: `/${locale === 'fr' ? '' : `${locale}/`}auth/signin` }
        };
    } else {
        infoData = await getProfile(session.user?.email);
        infoData.countries = await getCountries();
    }

    return {
        props: {
            session: session,
            locale: locale,
            infoData: infoData,
            messages: {
                ...require(`../../messages/${locale}.json`)
            }
        }
    };
}
