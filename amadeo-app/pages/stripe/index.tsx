import Head from 'next/head';
import { getSession } from 'next-auth/client';
import React, { useEffect, useState } from 'react';
import { Elements } from '@stripe/react-stripe-js';
import { loadStripe, StripeElementsOptions } from '@stripe/stripe-js';
import { CheckoutForm } from '../../components/checkout';
import { useDispatch, useSelector } from 'react-redux';
import { stripePaymentIntentAction } from '../../redux/paymentPlans';
import { clientSecretSelector } from '../../redux/paymentPlans/selectors';

// Make sure to call `loadStripe` outside of a componentâ€™s render to avoid
// recreating the `Stripe` object on every render.
const stripePromise = loadStripe(
    'pk_test_51KVgrtDBSh7ykoyWbEIYSADVKagIP8DCzx1kLlwZbcCc9XFlvEcQGWZ2kIwJ5JhA6u0mps4WY82kiN634aKbxG8r00uGxWTloi'
);

export default function Index({ session }: { session: any }) {
    // if (!session) return <></>;
    console.log(session);
    const dispatch = useDispatch();
    const stripeClientSecret = useSelector(clientSecretSelector);

    const [clientSecret, setClientSecret] = useState('');

    useEffect(() => {
        // Create PaymentIntent as soon as the page loads
        dispatch(stripePaymentIntentAction());
    }, []);

    useEffect(() => {
        // Create PaymentIntent as soon as the page loads
        if (stripeClientSecret !== '') {
            setClientSecret(stripeClientSecret);
        }
    }, [stripeClientSecret]);

    const appearance: any = {
        theme: 'stripe'
    };
    const options: StripeElementsOptions = {
        clientSecret,
        appearance
    };

    return (
        <>
            <Head>
                <title>Amadeo CRM - Stripe</title>
                <meta name="description" content="Generated by create next app" />
            </Head>

            <div className="block-white-8 mr-10 white-shadow-big">
                <div className="page-title">
                    <h1>Stripe Section</h1>
                    <div className="clear-both" />
                </div>
                {clientSecret !== '' && (
                    <Elements options={options} stripe={stripePromise}>
                        <CheckoutForm />
                    </Elements>
                )}
            </div>
        </>
    );
}

export async function getServerSideProps(context: any) {
    const { locale } = context;
    const session = await getSession(context);

    if (!session) {
        return {
            redirect: { destination: `/${locale === 'fr' ? '' : `${locale}/`}auth/signin` }
        };
    }

    return {
        props: {
            session,
            locale,
            messages: {
                ...require(`../../messages/${locale}.json`)
            }
        }
    };
}
